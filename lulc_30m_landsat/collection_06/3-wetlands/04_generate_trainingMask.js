// This step performs a selection of pixels with a high probability to be wetlands in Cerrado
// For clarification, write to <dhemerson.costa@ipam.org.br> and <felipe.lenti@ipam.org.br>
// For this, we applied the following spatio-temporal filters:
// i) Monthly frequency of water detection from 1985 to 2020 (generated by step 2) - derived from GT Água BETA (without filters)
// ii) Mapbiomas class = stable classes of grassland or savana
// iii) HAND < 15m - Planforms layer (filter only to terrain with water probability)
// iv) SLOPE < 10 slope - avoid false-positives (ALOS/AW3D30)
// v) Reference data SEMA/SP and CAR/TO

// define treshholds 
var limiar_min = 3;    // minimum water frequency
var limiar_max = 100;  // maximum water frequency
var limiar_slope = 10; // maximum slope

// output path
var dirout = 'projects/mapbiomas-workspace/AUXILIAR/CERRADO/c6-wetlands/input_masks/';

/// biomes raster
var biomas = ee.Image('projects/mapbiomas-workspace/AUXILIAR/biomas-2019-raster');

// mask only cerrado 
var cerrado = biomas.updateMask(biomas.eq(4)); 

/// water frequency (from GT Água) - raw version 
var freq_85_19 = ee.Image('projects/mapbiomas-workspace/AUXILIAR/CERRADO/c6-wetlands/input_masks/waterFreq_CERRADO_1985_2019')
                .updateMask(cerrado);

/// brazilian political states raster
var assetStates = ee.Image('projects/mapbiomas-workspace/AUXILIAR/estados-2016-raster');
                
/// stable pixels from mapbiomas collection 5.0
var mapbiomas = ee.Image('projects/mapbiomas-workspace/AUXILIAR/CERRADO/c6-wetlands/input_masks/stablePixels_C5');
               
///  ALOS 30m terrain model
var SLOPE = ee.Terrain.slope(ee.Image('JAXA/ALOS/AW3D30_V1_1')
                .select('AVE')
                .updateMask(cerrado));

/// area of interest (HAND)
var HAND = ee.Image('projects/mapbiomas-workspace/AUXILIAR/CERRADO/c6-wetlands/input_masks/aoi_wetlands_c6')
           .updateMask(cerrado);
           
// reference data: inventario florestal do estado de são paulo
var SEMA_SP = ee.Image('projects/mapbiomas-workspace/VALIDACAO/MATA_ATLANTICA/SP_IF_2020_2');
SEMA_SP = SEMA_SP.remap(
                  [3, 4, 5,  9, 11,12,13,15,18,19,20,21,22,23,24,25,26,29,30,31,32,33],
                  [3, 4, 3, 21, 11, 12,12,15,19,19,19,19,25,25,25,25,33,25,25,25,25,33]);

// binarize only wetlands class
var SEMA_bin = SEMA_SP.remap(
                  [3, 4, 5, 9, 11, 12, 13, 15, 18,19,20,21,22,23,24,25,26,29,30,31,32,33],
                  [0, 0, 0, 0,  1,  0, 0, 0,  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);
                  var SEMA_bin = SEMA_bin.unmask(0).updateMask(assetStates.eq(35));
                  
// import mapbiomas color ramp
var palettes = require('users/mapbiomas/modules:Palettes.js');
var vis = {
    'min': 0,
    'max': 49,
    'palette': palettes.get('classification6')
};

// plot to inspect
/// stable pixels from collection 5.0 
Map.addLayer(mapbiomas, vis, "Amostras estáveis C5 ", false);

/// water frequency
Map.addLayer(freq_85_19, {palette: ["#6CFF0B", "#326213", "#F7EF05", "#F07108", "#FB0303", "#B20D8A"],
                          min:1, max:420}, "Frequência Água 1985-2019", false);

     
// filter water frequency by stable pixels, for each class:
// pasture
var pasture = freq_85_19.updateMask(mapbiomas.eq(15));
// grassland
var grassland = freq_85_19.updateMask(mapbiomas.eq(12));
// savanna
var savana = freq_85_19.updateMask(mapbiomas.eq(4));
                   
// histogram of frequencies by class
var freq_classes = mapbiomas.updateMask(freq_85_19);
//var histogram_classes = ui.Chart.image.histogram({image: freq_classes,
//                                                  maxPixels: 26112495766});
//  histogram_classes.setOptions({
//  title: 'Classes mapeadas como água pelo menos uma vez - ' + ano,
//});
//print (histogram_classes);
//
// grassland
var histogram_grassland = ui.Chart.image.histogram({image: grassland,
                                                  maxPixels: 26112495766});
  histogram_grassland.setOptions({
  title: 'Frequências Campo',
});
print (histogram_grassland);
//
// savanna
var histogram_savana = ui.Chart.image.histogram({image: savana,
                                                  maxPixels: 26112495766});
  histogram_savana.setOptions({
  title: 'Frequências Savana',
  });
  print (histogram_savana);

// pasture
var histogram_pasture = ui.Chart.image.histogram({image: pasture,
                                                  maxPixels: 26112495766});
  histogram_pasture.setOptions({
  title: 'Frequências Pasto',
});
print (histogram_pasture);

// filter by water frequency 
var filtered_freq_pasture = pasture.updateMask(freq_85_19.gt(limiar_min).and(freq_85_19.lt(limiar_max)));
var filtered_freq_grassland = grassland.updateMask(freq_85_19.gt(limiar_min).and(freq_85_19.lt(limiar_max)));
var filtered_freq_savana = savana.updateMask(freq_85_19.gt(limiar_min).and(freq_85_19.lt(limiar_max)));

// plot slope
Map.addLayer(SLOPE, {palette: ["purple", "blue", "green", "yellow", "orange", "red" ], min:1, max:15}, "Slope ALOS", false);

// filter by terrain
var pasture_hand_slope = filtered_freq_pasture.updateMask(HAND.eq(1).and(SLOPE.lt(limiar_slope)));
var grassland_hand_slope = filtered_freq_grassland.updateMask(HAND.eq(1).and(SLOPE.lt(limiar_slope)));
var savana_hand_slope = filtered_freq_savana.updateMask(HAND.eq(1).and(SLOPE.lt(limiar_slope)));

// blend filtered samples - without pasture 
var potential_wetland = savana_hand_slope.blend(grassland_hand_slope);

// plot
Map.addLayer(SEMA_SP, vis, "SEMA/SP", false);
Map.addLayer(HAND, {palette:['white', 'red', 'yellow'], min:0, max:2}, "AOI", false);

// rect samples for the state of são paulo
var sema_mask = SEMA_bin.updateMask(HAND);
Map.addLayer(sema_mask, vis, 'SEMA MASK');

// remove potential wetlands from SP
var potential_wetland2 = potential_wetland.updateMask(assetStates.neq(35));
// update wetlands with samples from reference data
var potential_wetland2 = potential_wetland2.blend(sema_mask);
var potential_wetland2 = potential_wetland2.updateMask(potential_wetland2.gt(0));

// reclassify mask - equals to zero= discard; greater than zero = potential wetland
var train_wetland = ee.Image(0)
                    .where(potential_wetland2.eq(0), 0)                                   // discard
                    .where(potential_wetland2.gt(0).and(potential_wetland2.lt(421)), 1)   // potential wetland
                    .updateMask(potential_wetland2);


// remap potential wetland to wetland class
var train_wetland = train_wetland.remap([0, 1],
                                        [0, 11]);
                                        
// merge wetlands over stable pixels from other classes
var train_wetland = mapbiomas.blend(train_wetland);

// plot
Map.addLayer(train_wetland, vis, "Training Mask");


// export as GEE asset
Export.image.toAsset({
    "image": train_wetland.toInt8(),
    "description": 'trainingMask_wetlands_c6',
    "assetId": dirout + 'trainingMask_wetlands_c6',
    "scale": 30,
    "pyramidingPolicy": {
        '.default': 'mode'
    },
    "maxPixels": 1e13,
    "region": train_wetland
});  
